#!/usr/bin/env bash
#
# Copyright (c) 2020 Kntnt Sweden AB. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


DEFAULT_SERVER=local

PAC_FILE="$HOME/.pac"

SOCKET_DIR="$HOME"

PROXY_HOST=127.0.0.1

PROXY_PORT=8888

if [[ "$OSTYPE" == "linux-gnu" ]]; then
	GNU_SED_COMMAND=sed
	GNU_FIND=find
elif [[ "$OSTYPE" == "darwin"* ]] &&  which gsed > /dev/null && which gfind > /dev/null; then
	GNU_SED_COMMAND=gsed
	GNU_FIND=gfind
else
	echo "Install GNU sed and GNU find."
	exit 2
fi

function start() {

	local socket="$SOCKET_DIR/.proxy-$1"

	if [[ -f $socket ]]; then
		echo "There is already a proxy for $1."
		exit 3
	fi

	echo "Starting proxy for $1."
    ssh -MS "$SOCKET_DIR/.proxy-$1" -fnNT -D 0.0.0.0:$PROXY_PORT $2
	$GNU_SED_COMMAND -r "/^\s*return \"DIRECT\";\s*$/i \\\\tif (dnsDomainIs(host, \"$1\")) return \"SOCKS5 $PROXY_HOST:$PROXY_PORT; DIRECT\";" -i "$PAC_FILE"

}

function stop() {
	echo -n "Stopping proxy for $1. "
	ssh -S "$SOCKET_DIR/.proxy-$1" -O exit $PROXY_HOST
	$GNU_SED_COMMAND -r "/dnsDomainIs\(host, \"$1\"\)/d" -i "$PAC_FILE"
}

function list() {
	local socket;
	for socket in $($GNU_FIND $SOCKET_DIR -maxdepth 1 -name ".proxy-*" -type s); do
		echo -n "Checking proxy for ${socket##*.proxy-}: "
    	ssh -S "$socket" -O check $PROXY_HOST
	done
}

function reset() {

	local socket;

	for socket in $($GNU_FIND $SOCKET_DIR -maxdepth 1 -name ".proxy-*" -type s); do
		echo -n "Stopping proxy for ${socket##*.proxy-}. "
    	ssh -S "$socket" -O exit $PROXY_HOST
	done

	cat <<\EOT > "$PAC_FILE"
function FindProxyForURL(url, host) {
	return "DIRECT";
}
EOT

}

if (( $# == 1 )) && [[ $1 == 'list' ]]; then
	list
elif (( $# == 1 )) && [[ $1 == 'reset' ]]; then
	reset
elif (( $# == 2 )) && [[ $1 == 'start' ]]; then
	start $2 $DEFAULT_SERVER
elif (( $# == 3 )) && [[ $1 == 'start' ]]; then
	start $2 $3	
elif (( $# == 2 )) && [[ $1 == 'stop' ]]; then
	stop $2
else
	echo "Usage: $(basename $0) start <domain> [<server>]"
	echo "Usage: $(basename $0) stop <domain>"
	echo "Usage: $(basename $0) reset"
	echo "See:   https://github.com/Kntnt/proxy"
	exit 1
fi
